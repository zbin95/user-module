<?php

namespace Modules\User\Http\Resources\Common;



use App\Helpers\CityHelper;
use App\Helpers\FileHelper;
use App\Helpers\StringHelper;
use App\Result\UserResult;
use Modules\Comment\Models\CommentModel;
use Modules\Dynamic\Models\DynamicModel;
use Modules\User\Data\UserData;
use Modules\User\Models\UserModel;
use Modules\User\Service\User\UserService;
use Modules\UserPraise\Models\UserPraiseModel;
use Modules\UserStore\Models\UserStoreModel;
use Modules\Zeqiao\Data\DoctorData;
use Modules\Zeqiao\Data\LectureData;

class UserResource extends \Modules\User\Http\Resources\Base\UserBaseResource
{
    /**
     * Transform the resource into an array.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function toArrayFilter()
    {

        $curUser = $this->getUser();

        $age = null;
        if ($this->birthday){
            $age =  date("Y",time()) - date("Y",$this->birthday);
        }

        $data = [
            "is_sub" => UserService::isSub($this->resource, $curUser) ? 1 : 0,
            "is_fans" => UserService::isFans($curUser, $this->resource) ? 1 : 0,
            "is_self" => $curUser && $curUser->id == $this->id ? 1: 0,
            "wallet_balance" => $this->isPlatFormIos() ? $this->ios_wallet_balance : $this->wallet_balance,
            "age" => $age
        ];

        $subUserNum =$this->when($this->isResourceDetail(), function (){
            return count(UserData::getUserSubUserIds($this->resource));
        }, 0);

        $fansUserNum = $this->when($this->isResourceDetail(), function (){
            return count(UserData::getUserFansUserIds($this->resource));
        }, 0);

        $subDoctorNum = $this->when($this->isResourceDetail(), function (){
            return count(DoctorData::getUserSubDoctorIds($this->resource));
        }, 0);

        $subLecturerNum = $this->when($this->isResourceDetail(), function (){
            return count(LectureData::getUserSubLectureIds($this->resource));
        }, 0);
        // fans数
        $data["fans_user_num"] = $fansUserNum;
        $data["fans_num"] = $fansUserNum;
        // 关注的用户数
        $data["sub_user_num"] = $subUserNum;
        // 关注的
        $data["sub_doctor_num"] = $subDoctorNum;
        $data["sub_lecturer_num"] = $subLecturerNum;

        // 关注总数
        $data["sub_total"] = $subUserNum + $subUserNum + $subDoctorNum;

        if ($this->isResourceDetail()){

            $commentNum = CommentModel::where("source_author_user_id", $this->id)->orWhere("reply_user_id", $this->id)->count();
            $praiseNum = UserPraiseModel::where("source_author_user_id", $this->id)->where("source_type", CommentModel::modelName)->count();
            $hunNum = UserPraiseModel::where("source_author_user_id", $this->id)->where("source_type", DynamicModel::modelName)->count();
            $storeNum = UserStoreModel::where("source_author_user_id", $this->id)->count();
            $data["comment_num"] = $commentNum;
            $data["praise_num"] = $praiseNum;
            $data["hug_num"] = $hunNum;
            $data["store_num"] = $storeNum;
        }


        //  如果是当前用户
        if ($curUser && $curUser->id == $this->id){
            // 收藏数量计算

            // 评论数计算

            // 获赞数计算

            // 拥抱数计算

        }


        return $data; // TODO=> Change the autogenerated stub
    }
}

